---
import ArrowBackIcon from '../../components/icons/ArrowBack.astro';
import Layout from '../../layouts/Layout.astro';
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import Chips from '../../components/Chips/Chips.astro';
import WorldMap from '../../components/icons/WorldMap.astro';
import LinkIcon from '@components/icons/LinkIcon.astro';
import type { Technology } from '@interfaces/types';

export const getStaticPaths = (async () => {
  const proyects = await getCollection('projects');

  return proyects.map(proyect => ({
    params: { id: proyect.slug },
    props: { proyect }
  }));
}) satisfies GetStaticPaths;

const { id } = Astro.params;
const { proyect } = Astro.props;
const { Content } = await proyect.render();
const { demoUrl, image, repoUrl, title, tags, summary } = proyect.data;
const tegnologiesTags = tags as Technology[];
---

<Layout title={id}>
  <main class="proyect-info wrapper">
    <div>
      <button class="go-back__btn" onclick="history.back()" aria-label="boton para ir a los proyectos">
        <ArrowBackIcon class="go-back__arrow" />
        Volver a proyectos
      </button>
      <h1 class="proyect__title" transition:name={`${title}-title`}>
        {title}
      </h1>
      <span class="proyect__subtitle smoke">{summary}</span>
      <img class="proyect-info__img" src={image.src} alt={title} />

      <div class="proyect-info__datails">
        <div class="proyect__links">
          {
            demoUrl && (
              <a
                class="proyect__link"
                href={demoUrl}
                target="_blank"
                rel="noopener noreferrer"
                aria-label="link para ver demo"
              >
                <WorldMap class="proyect__icon" />
                <span>Ver demo</span>
              </a>
            )
          }
          <a
            class="proyect__link"
            href={repoUrl}
            target="_blank"
            rel="noopener noreferrer"
            aria-label="link para ver demo"
          >
            <LinkIcon class="proyect__icon" />
            <span>Ver repositorio</span>
          </a>
        </div>
        <Chips tegnologies={tegnologiesTags} withIcon />
      </div>

      <div class="test">
        <Content />
      </div>
    </div>
  </main>

  <style>
    .test {
      max-width: 50rem;
      line-height: 1.5;
      text-wrap: pretty;
      display: flex;
      flex-direction: column;
      gap: 1rem;
      a {
        color: rgba(var(--color), 1);
      }
      ul {
        padding-left: 1rem;
      }
      li {
        list-style: initial;
      }
      p  a {
        color: red !important;
      }
    }

    .go-back__btn {
      padding: 0.5em 1em;
      margin-bottom: 2rem;
      border-radius: 0.25rem;
      transition: background-color 0.2s ease-in;
      border: 1px solid rgb(255 255 255 / 0.25);

      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .go-back__arrow {
      width: 1.3rem;
    }
    .go-back__btn:hover {
      background-color: rgba(var(--color-button-muted), 0.5);
    }
    .proyect-info {
      padding: 8rem 1rem 1rem 1rem;

      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .proyect-info__img {
      max-width: 50rem;
      aspect-ratio: 16/9;
      border-radius: 0.3em;
    }
    .proyect-info__datails {
      width: 100%;
      padding: 2rem 0;
      display: flex;
      flex-direction: column;
      row-gap: 1.5rem;
    }

    .proyect__title {
      font-size: clamp(2em, 3vw, 1.3em);
      font-weight: 600;
      line-height: 1.3;
    }
    .proyect__subtitle {
      display: inline-block;
      font-size: 14px;
      margin-bottom: 1.4rem;
    }
    .proyect__icon {
      width: 1.3rem;
    }

    .proyect__links {
      font-weight: 400;
      display: flex;
      justify-items: center;
      gap: 2em;
    }
    .proyect__link {
      padding: 0.5rem;
      border-radius: 0.25rem;
      border: var(--border-color);
      transition: background-color 0.2s ease-in;

      display: flex;
      align-items: center;
      gap: 0.3rem;
    }
    .proyect__link:hover {
      background-color: rgba(var(--color-button-muted), 0.5);
    }
   
  </style>
</Layout>
