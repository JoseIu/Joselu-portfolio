---
import ArrowShortDown from '../icons/ArrowShortDown.astro';
import Folder from '../icons/Folder.astro';
import GitHub from '../icons/GitHub.astro';
import WorldMap from '../icons/WorldMap.astro';

interface Props {
  id: string;
  title: string;
  descriptionList: string[];
  demo: string;
  repo: string;
  isInConstruction?: boolean;
}
const { id, title, demo, descriptionList, repo, isInConstruction } = Astro.props;
---

<article class="proyect">
  <header class="proyect__header">
    <a
      href={`/info-proyects/${id}`}
      class="proyect__title"
      transition:name=`title${id}`
      view-transition-name=`title-${id}`
    >
      <Folder class="proyect__icon" />
      {title}
      <ArrowShortDown class="proyect__icon proyect__arrow" />
    </a>
    <div class="proyect__links">
      <a
        class="proyect__link"
        href={demo}
        target="_blank"
        rel="noopener noreferrer"
        aria-label="link para ver demo"
      >
        <WorldMap class="proyect__icon" />
        <span class="visually-hidden">Demo</span>
      </a>
      <a
        class="proyect__link"
        href={repo}
        target="_blank"
        rel="noopener noreferrer"
        aria-label="link para el código en Github"
      >
        <GitHub class="proyect__icon" />
        <span class="visually-hidden">Repo</span>
      </a>
    </div>
  </header>
  {isInConstruction && <span class="building">En construcción</span>}
  <ul class="proyect__list">
    {descriptionList.map(description => <li class="proyect__li smoke">{description}</li>)}
  </ul>
</article>

<style>
  .proyect {
    padding: 1rem;
    border-radius: 0.375rem;
    background-color: rgba(var(--color-button-muted), 0.5);

    --tw-ring-color: rgba(var(--muted), 1);
    --tw-ring-shadow: 0 0 0 1px var(--tw-ring-color);
    box-shadow: var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);

    display: flex;
    flex-direction: column;
    row-gap: 0.5rem;
  }
  .proyect__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 0.5em;
  }
  .proyect__links {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .proyect__title {
    font-size: clamp(1rem, 2vw, 1.2rem);

    display: flex;
    align-items: center;
    line-height: normal;
    gap: 0.3em;
    transition:
      color 0.3s ease-in,
      border-color 0.3s ease-in;
    border-bottom: 2px dashed transparent;
    &:hover {
      color: rgba(var(--color), 1);
      border-color: rgba(var(--color), 1);
    }
    &:hover .proyect__arrow {
      transform: translate(0.4rem, -0.3rem);
    }
  }
  .proyect__icon {
    width: 1rem;
  }
  .proyect__arrow {
    color: rgb(var(--color), 1);
    transition: transform 0.2s ease-in;
  }
  .proyect__description {
    font-size: 0.875em;
  }
  .proyect__list {
    padding: 0 1rem;
  }
  .proyect__li {
    font-size: 12px;
    list-style: initial;
  }
</style>
