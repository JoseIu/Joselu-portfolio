---
import Chips from '@components/Chips/Chips.astro';
import type { Technology } from '@interfaces/types';
import type { CollectionEntry } from 'astro:content';
import Folder from '../icons/Folder.astro';

type Props = {
  proyect: CollectionEntry<'projects'>;
};

const { proyect } = Astro.props;
const { title, summary, isInConstruction, tags } = proyect.data;
const tegnologiesTags = tags as Technology[];
---

<article class="proyect">
  <a class="proyect__link" href={`/info-proyects/${proyect.slug}`}>
    <header class="proyect__header">
      <h2 class="proyect__title" transition:name={`${title}-title`}>
        <Folder class="proyect__icon" />
        {title}
        <!-- <ArrowShortDown class="proyect__icon proyect__arrow" /> -->
      </h2>
    </header>
    <div class="proyect__content">
      {isInConstruction && <span class="building">En desarrollo</span>}
      <span class="smoke">{summary}</span>

      <Chips tegnologies={tegnologiesTags} />
    </div>
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 24 24"
      fill="none"
      stroke-width="2.5"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="icon"
    >
      <line x1="5" y1="12" x2="19" y2="12" class="line"></line>
      <polyline points="12 5 19 12 12 19" class="arrow"></polyline>
    </svg>
  </a>
</article>

<style>
  .proyect {
    position: relative;
    padding: 1.4rem;
    border-radius: 0.375rem;

    --tw-ring-color: rgba(var(--muted), 1);
    --tw-ring-shadow: 0 0 0 1px var(--tw-ring-color);
    box-shadow: var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  }
  .proyect__link {
    height: 100%;

    display: flex;
    flex-direction: column;
    justify-content: space-between;
    row-gap: 1rem;
  }
  .proyect:hover {
    background-color: rgba(var(--color-button-muted), 0.5);
  }

  .proyect__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 0.5em;
  }

  .proyect__title {
    font-size: clamp(1rem, 2vw, 1.2rem);

    display: flex;
    align-items: flex-end;
    gap: 0.3em;
    line-height: 0.75rem;
  }
  .proyect__content {
    display: flex;
    flex-direction: column;
    row-gap: 0.4rem;
  }
  .proyect__icon {
    width: 1rem;
  }
  .proyect__arrow {
    color: rgb(var(--color), 1);
    transition: transform 0.2s ease-in;
  }

  .icon {
    position: absolute;
    right: 1rem;
    top: 45%;
    stroke: currentColor;
    overflow: visible;
  }
  .line {
    transform: scaleX(0) translateX(4px);
    transform-origin: left;
    transition: transform 0.3s ease-in-out;
  }
  .arrow {
    transform: translateX(0);
    transition: transform 0.3s ease-in-out;
  }
  .proyect:hover .line {
    transform: scaleX(1) translateX(1px);
  }
  .proyect:hover .arrow {
    transform: translateX(1px);
  }
  .proyect:hover .icon {
    stroke: white;
  }
</style>
